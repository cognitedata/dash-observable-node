{
  "src/lib/components/ObservableNode.react.js": {
    "description": "ObservableNode is a DOM element (a div) which creates a MutationObserver for its DOM subtree.\nThis way it can trigger callbacks when any change in the subtree happens. It is not limited\nto changes having to originate in another Dash callback.\n\nCurrently not tested beyond using it as a string storage, so YMMV with an actual DOM subtree.",
    "displayName": "ObservableNode",
    "methods": [
      {
        "name": "startObserving",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "stopObserving",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "getElement",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "children": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The content of the DOM node."
      },
      "hidden": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether to hide the node (yes by default).",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  }
}